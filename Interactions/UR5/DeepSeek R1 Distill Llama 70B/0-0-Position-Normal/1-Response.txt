To solve the inverse kinematicsfor the given 1-DOF serial manipulator, we need to determine the joint angle θ that positions the TCP at the desired coordinates. The manipulator rotates around the Z-axis, and the TCP's movement is confined to the XY-plane. 

Given the target position \( p = (x, y, z) \), since the TCP's z-coordinate is fixed at 0, we only need to consider the x and y components. The joint angle θ can be found using the arctangent function, considering the correct quadrant.

The solution involves calculating θ using the arctan2 function to handle the signs of x and y correctly. The final joint angle is given by:

θ = arctan2(-x, y)

This approach ensures that the angle is within the required range and correctly positions the TCP at the target location.

```python
import math

def inverse_kinematics(p: tuple[float, float, float]) -> float:
    """
    Gets the joint values needed to reach position "p".
    :param p: The position to reach in the form [x, y, z].
    :return: The value to set the link to for reaching position "p".
    """
    x, y, z = p
    # Calculate the joint angle using arctan2 to handle the correct quadrant
    theta = math.atan2(-x, y)
    return theta
```