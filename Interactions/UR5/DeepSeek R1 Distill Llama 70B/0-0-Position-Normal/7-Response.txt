To solve the inverse kinematicsproblem for the given 1 degree-of-freedom serial manipulator, we need to determine the joint angle θ that positions the TCP at the desired target position. The manipulator consists of a revolute joint rotating around the Z-axis, and the TCP is located at [0, 0.13585, 0] in its local frame.

### Approach
1. **Understand the Robot Structure**: The TCP moves in a circular path in the XY-plane as the joint rotates. The position of the TCP in the world frame is given by:
   - \( x = 0.13585 \cdot \sin(\theta) \)
   - \( y = 0.13585 \cdot \cos(\theta) \)
   - \( z = 0 \)

2. **Formulate the Inverse Kinematics**: Given a target position \((x_{target}, y_{target}, 0)\), solve for θ using the arctangent function to account for the correct quadrant.

3. **Adjust for Rotation Direction**: The initial calculation using `math.atan2(x_target, y_target)` was yielding the correct angle but with the wrong sign. To correct this, negate the calculated angle to align with the joint's rotation direction.

### Solution Code
```python
import math

def inverse_kinematics(p: tuple[float, float, float]) -> float:
    """
    Computes the joint angle needed to reach the given position.
    
    Args:
        p: A tuple containing the target position [x, y, z].
        
    Returns:
        The joint angle in radians needed to reach the target position.
    """
    x_target, y_target, _ = p  # Ignore z since it's always 0
    # Calculate the joint angle using arctan2 to handle the correct quadrant
    theta = math.atan2(x_target, y_target)
    # Adjust the angle based on the joint's rotation direction
    theta = -theta
    return theta
```

### Explanation
- **Understanding the Robot Structure**: The TCP's movement is constrained to the XY-plane, rotating around the Z-axis. This simplifies the problem to a 2D inverse kinematics problem.
- **Formulating the Inverse Kinematics**: Using trigonometric relationships, we express the target position in terms of the joint angle θ. The `math.atan2` function is used to determine the angle in the correct quadrant.
- **Adjusting for Rotation Direction**: The initial calculation provided the correct angle but with the wrong sign. By negating the calculated angle, we align it with the joint's rotation direction, ensuring the TCP reaches the correct target position.

This approach efficiently solves the inverse kinematics problem for the given manipulator, ensuring accurate positioning of the TCP.