To solve the inverse kinematicsproblem for the given 2-degree-of-freedom robotic arm, we need to determine the joint angles θ1 and θ2 that position the tool center point (TCP) at a specified target position [x, y, z]. 

### Approach
1. **Understand the Robot Structure**: The robot has two revolute joints, both rotating about the Y-axis. The TCP's position is determined by the sum of the angles of these two joints.
2. **Forward Kinematics Insight**: The TCP's position in the X-Z plane is given by:
   - \( x = 0.81725 \sin(\theta_1 + \theta_2) \)
   - \( z = 0.81725 \cos(\theta_1 + \theta_2) \)
   - The Y position is fixed at \( y = -0.1197 \).
3. **Inverse Kinematics Solution**: Given a target position [x, y, z], we calculate the combined angle \( \theta = \theta_1 + \theta_2 \) using \( \theta = \arctan2(x, z) \). To simplify, we set \( \theta_1 = 0 \) and \( \theta_2 = \theta \).

### Solution Code
```python
import math

def inverse_kinematics(p: tuple[float, float, float]) -> tuple[float, float]:
    x, y, z = p
    theta = math.atan2(x, z)
    return (0.0, theta)
```

### Explanation
- **Calculate Combined Angle**: Using `math.atan2(x, z)`, we determine the angle \( \theta \) needed to reach the target position in the X-Z plane.
- **Set Joint Angles**: By setting \( \theta_1 = 0 \) and \( \theta_2 = \theta \), the TCP moves to the desired position, leveraging the robot's structure and the fixed Y position.

This approach efficiently solves the inverse kinematics problem by focusing on the essential geometry and constraints of the robotic arm.