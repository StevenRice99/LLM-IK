To solve the inverse kinematicsproblem for the given 1 degree-of-freedom serial manipulator, we need to determine the joint angle θ that positions the TCP at the desired coordinates. The manipulator consists of a revolute joint rotating around the Z-axis, and the TCP is fixed at a height of 0.09465 meters above the joint. The TCP moves in a circular path in the XY-plane as the joint rotates.

### Approach
1. **Understanding the Movement**: The TCP's movement is constrained to a circle in the XY-plane at a fixed height of 0.09465 meters. The joint angle θ determines the position of the TCP on this circle.
2. **Forward Kinematics**: Given the joint angle θ, the TCP's position in the world frame is:
   - x = r * cos(θ)
   - y = r * sin(θ)
   - z = 0.09465
   Here, r is the radius of the circular path, which is the distance from the revolute joint to the TCP in the XY-plane.
3. **Inverse Kinematics**: To find θ given a target position (x, y, z), we use the arctangent function to determine the angle from the XY-plane coordinates:
   - θ = arctan2(y, x)
   This function handles the correct quadrant based on the signs of x and y.

### Solution Code
```python
import math

def inverse_kinematics(p: tuple[float, float, float]) -> float:
    """
    Gets the joint values needed to reach position "p".
    :param p: The position to reach in the form [x, y, z].
    :return: The value to set the link to for reaching position "p".
    """
    x, y, z = p
    theta = math.atan2(y, x)
    return theta
```

### Explanation
- **Function Definition**: The function `inverse_kinematics` takes a tuple `p` representing the target position [x, y, z].
- **Extract Coordinates**: The x, y, and z coordinates are extracted from the tuple.
- **Calculate Joint Angle**: Using `math.atan2(y, x)`, the function computes the joint angle θ in radians, ensuring the correct quadrant is considered.
- **Return Angle**: The computed angle θ is returned, which is the value needed to set the joint to reach the target position.

This approach efficiently solves the inverse kinematics problem by leveraging the geometric relationship between the joint angle and the TCP's position in the XY-plane.