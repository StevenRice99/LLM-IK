To solve the inverse kinematicsproblem for the 2-DOF robotic arm, we need to determine the joint angles θ1 and θ2 that will position the TCP at the desired location and orientation. Here's a step-by-step approach:

### Step 1: Understand the Forward Kinematics
First, we model how the joint angles affect the TCP's position and orientation. The robot has two revolute joints:
- **Joint 1 (θ1):** Rotates around the Z-axis.
- **Joint 2 (θ2):** Rotates around the Y-axis.

The position of the TCP is determined by the cumulative effect of these rotations.

### Step 2: Position Equations
The TCP's position in the world frame can be expressed using rotation matrices. The position equations are:
- **TCP_x = -L1 * sin(θ1) * sin(θ2)**
- **TCP_y = L1 * cos(θ1) * sin(θ2) + L2 * cos(θ2)**
- **TCP_z = L1 * sin(θ1) * cos(θ2) + L2 * sin(θ2)**

Where:
- **L1 = 0.0823 m** (length of the first link)
- **L2 = 0.09465 m** (length of the second link)

### Step 3: Orientation Equations
The orientation of the TCP is determined by the product of the rotation matrices of the two joints. The orientation can be represented as:
- **Orientation = Rz(θ1) * Ry(θ2) * Initial_Orientation**

Where:
- **Rz(θ1)** is the rotation matrix around the Z-axis by θ1.
- **Ry(θ2)** is the rotation matrix around the Y-axis by θ2.
- **Initial_Orientation** is the orientation of the TCP when both joints are at zero, which is [0, 0, π/2] (pointing straight up along the Z-axis).

### Step 4: Inverse Kinematics
Given a desired position (p) and orientation (r), we need to solve for θ1 and θ2 such that:
- **TCP_position = p**
- **TCP_orientation = r**

This involves solving the system of equations derived from the position and orientation equations. Since the problem states that all targets are reachable, we can assume a solution exists.

### Step 5: Solving the Equations
1. **From TCP_z:**
   Solve for θ2 using the desired z-coordinate.
   
2. **From TCP_y:**
   Substitute θ2 into the equation to solve for θ1.
   
3. **From TCP_x:**
   Ensure that the calculated θ1 and θ2 satisfy the x-coordinate equation.

### Step 6: Implement the Solution
Using the above steps, implement the inverse kinematics function to compute θ1 and θ2 for any given p and r.

### Conclusion
By systematically breaking down the problem into position and orientation components and solving the resulting equations, we can determine the necessary joint angles to achieve the desired TCP pose. This approach ensures that both the position and orientation constraints are satisfied simultaneously.