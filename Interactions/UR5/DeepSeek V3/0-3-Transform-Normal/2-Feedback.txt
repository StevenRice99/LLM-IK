<FEEDBACK>
The code was tested on multiple trials with valid inputs but encountered the following error:
Traceback (most recent call last):
  File "C:\Users\User\Documents\Code\LLM-IK\llm_ik.py", line 2517, in run_code
    joints = func_timeout(MAX_TIME, self.code[lower][upper][solving][mode], args=(position, orientation))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\User\Documents\Code\LLM-IK\.venv\Lib\site-packages\func_timeout\dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "C:\Users\User\Documents\Code\LLM-IK\.venv\Lib\site-packages\func_timeout\py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "C:\Users\User\Documents\Code\LLM-IK\Solutions\UR5\DeepSeek V3\0-3-Transform-Normal.py", line 27, in inverse_kinematics
    solution = sp.nsolve((position - target_position, orientation - target_orientation), (theta1, theta2, theta3, theta4), (0, 0, 0, 0))
                                                      ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  File "C:\Users\User\Documents\Code\LLM-IK\.venv\Lib\site-packages\sympy\core\decorators.py", line 106, in binary_op_wrapper
    return func(self, other)
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\User\Documents\Code\LLM-IK\.venv\Lib\site-packages\sympy\matrices\matrixbase.py", line 3047, in __sub__
    return self + (-a)
           ~~~~~^~~~~~
  File "C:\Users\User\Documents\Code\LLM-IK\.venv\Lib\site-packages\sympy\core\decorators.py", line 106, in binary_op_wrapper
    return func(self, other)
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\User\Documents\Code\LLM-IK\.venv\Lib\site-packages\sympy\matrices\matrixbase.py", line 2767, in __add__
    raise ShapeError(f"Matrix size mismatch: {self.shape} + {other.shape}.")
sympy.matrices.exceptions.ShapeError: Matrix size mismatch: (3, 3) + (3, 1).

</FEEDBACK>